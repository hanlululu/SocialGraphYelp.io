Traceback (most recent call last):
  File "c:\users\hanlu\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "c:\users\hanlu\anaconda3\lib\site-packages\nbclient\client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\users\hanlu\anaconda3\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "c:\users\hanlu\anaconda3\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "c:\users\hanlu\anaconda3\lib\asyncio\base_events.py", line 583, in run_until_complete
    return future.result()
  File "c:\users\hanlu\anaconda3\lib\site-packages\nbclient\client.py", line 541, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "c:\users\hanlu\anaconda3\lib\site-packages\nbclient\client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "c:\users\hanlu\anaconda3\lib\site-packages\nbclient\client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
yelp_all_businesses_df = pd.read_json('yelp_dataset/yelp_academic_dataset_business.json', lines = True)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
[1;32m<ipython-input-6-9f5b50c503d8>[0m in [0;36m<module>[1;34m[0m
[1;32m----> 1[1;33m [0myelp_all_businesses_df[0m [1;33m=[0m [0mpd[0m[1;33m.[0m[0mread_json[0m[1;33m([0m[1;34m'yelp_dataset/yelp_academic_dataset_business.json'[0m[1;33m,[0m [0mlines[0m [1;33m=[0m [1;32mTrue[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m
[1;32m~\anaconda3\lib\site-packages\pandas\util\_decorators.py[0m in [0;36mwrapper[1;34m(*args, **kwargs)[0m
[0;32m    212[0m                 [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    213[0m                     [0mkwargs[0m[1;33m[[0m[0mnew_arg_name[0m[1;33m][0m [1;33m=[0m [0mnew_arg_value[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 214[1;33m             [1;32mreturn[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    215[0m [1;33m[0m[0m
[0;32m    216[0m         [1;32mreturn[0m [0mcast[0m[1;33m([0m[0mF[0m[1;33m,[0m [0mwrapper[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\pandas\io\json\_json.py[0m in [0;36mread_json[1;34m(path_or_buf, orient, typ, dtype, convert_axes, convert_dates, keep_default_dates, numpy, precise_float, date_unit, encoding, lines, chunksize, compression)[0m
[0;32m    606[0m         [1;32mreturn[0m [0mjson_reader[0m[1;33m[0m[1;33m[0m[0m
[0;32m    607[0m [1;33m[0m[0m
[1;32m--> 608[1;33m     [0mresult[0m [1;33m=[0m [0mjson_reader[0m[1;33m.[0m[0mread[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    609[0m     [1;32mif[0m [0mshould_close[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    610[0m         [0mfilepath_or_buffer[0m[1;33m.[0m[0mclose[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\pandas\io\json\_json.py[0m in [0;36mread[1;34m(self)[0m
[0;32m    727[0m         [1;32melif[0m [0mself[0m[1;33m.[0m[0mlines[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    728[0m             [0mdata[0m [1;33m=[0m [0mensure_str[0m[1;33m([0m[0mself[0m[1;33m.[0m[0mdata[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 729[1;33m             [0mobj[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_get_object_parser[0m[1;33m([0m[0mself[0m[1;33m.[0m[0m_combine_lines[0m[1;33m([0m[0mdata[0m[1;33m.[0m[0msplit[0m[1;33m([0m[1;34m"\n"[0m[1;33m)[0m[1;33m)[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    730[0m         [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    731[0m             [0mobj[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_get_object_parser[0m[1;33m([0m[0mself[0m[1;33m.[0m[0mdata[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\pandas\io\json\_json.py[0m in [0;36m_get_object_parser[1;34m(self, json)[0m
[0;32m    751[0m         [0mobj[0m [1;33m=[0m [1;32mNone[0m[1;33m[0m[1;33m[0m[0m
[0;32m    752[0m         [1;32mif[0m [0mtyp[0m [1;33m==[0m [1;34m"frame"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 753[1;33m             [0mobj[0m [1;33m=[0m [0mFrameParser[0m[1;33m([0m[0mjson[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m.[0m[0mparse[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    754[0m [1;33m[0m[0m
[0;32m    755[0m         [1;32mif[0m [0mtyp[0m [1;33m==[0m [1;34m"series"[0m [1;32mor[0m [0mobj[0m [1;32mis[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\pandas\io\json\_json.py[0m in [0;36mparse[1;34m(self)[0m
[0;32m    855[0m [1;33m[0m[0m
[0;32m    856[0m         [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 857[1;33m             [0mself[0m[1;33m.[0m[0m_parse_no_numpy[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    858[0m [1;33m[0m[0m
[0;32m    859[0m         [1;32mif[0m [0mself[0m[1;33m.[0m[0mobj[0m [1;32mis[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\anaconda3\lib\site-packages\pandas\io\json\_json.py[0m in [0;36m_parse_no_numpy[1;34m(self)[0m
[0;32m   1087[0m         [1;32mif[0m [0morient[0m [1;33m==[0m [1;34m"columns"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1088[0m             self.obj = DataFrame(
[1;32m-> 1089[1;33m                 [0mloads[0m[1;33m([0m[0mjson[0m[1;33m,[0m [0mprecise_float[0m[1;33m=[0m[0mself[0m[1;33m.[0m[0mprecise_float[0m[1;33m)[0m[1;33m,[0m [0mdtype[0m[1;33m=[0m[1;32mNone[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1090[0m             )
[0;32m   1091[0m         [1;32melif[0m [0morient[0m [1;33m==[0m [1;34m"split"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;31mValueError[0m: Expected object or value
ValueError: Expected object or value

